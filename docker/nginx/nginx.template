server {
       listen         80;
       server_name ${PRODUCTION_HOST};
       return         301 https://$server_name$request_uri;
}

server {
    listen      443 ssl;
    server_name ${PRODUCTION_HOST};

    ssl_certificate      /etc/letsencrypt/live/${PRODUCTION_HOST}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/${PRODUCTION_HOST}/privkey.pem;

  client_max_body_size 50M;

  # this is the internal Docker DNS, cache only for 30s
  resolver 127.0.0.11 valid=30s;

  location = /favicon.ico {
    access_log off;
    log_not_found off;
  }

  location /static/ {
    alias /app/static/;
  }

  location /media/ {
    alias /app/media/;
  }

  location / {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    set $to_cloud to_cloud:8000;
    proxy_pass http://$to_cloud;
  }

  location /stripe/ {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    set $stripe stripe:8000;
    proxy_pass http://$stripe;
  }

  location /billing/ {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    set $billing billing:8000;
    proxy_pass http://$billing;
  }
}
